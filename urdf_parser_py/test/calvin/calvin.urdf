<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from ~/ros/hydro/dry/calvin_robot/calvin_description/robots/calvin.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="calvin" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="${base_link_length} ${base_link_width} ${base_link_height}" />-->
        <mesh filename="package://volksbot_driver/meshes/base.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!--<box size="${base_link_length} ${base_link_width} ${base_link_height}" />-->
        <mesh filename="package://volksbot_driver/meshes/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="10"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.105354124525" ixy="0.0" ixz="0.0" iyy="0.272104057825" iyz="0.0" izz="0.3374165317"/>
    </inertial>
  </link>
  <link name="left_front_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
      <material name="blackish">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000681390352444" ixy="0.0" ixz="0.0" iyy="0.000681390352444" iyz="0.0" izz="0.00121278125"/>
    </inertial>
  </link>
  <gazebo reference="left_front_wheel_link">
    <!-- Turtlebot: -->
    <mu1 value="10"/>
    <mu2 value="10"/>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
    <material value="Gazebo/FlatBlack"/>
  </gazebo>
  <joint name="left_front_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.225 0.205 -0.0275"/>
    <parent link="base_link"/>
    <child link="left_front_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="left_middle_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
      <material name="blackish">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000681390352444" ixy="0.0" ixz="0.0" iyy="0.000681390352444" iyz="0.0" izz="0.00121278125"/>
    </inertial>
  </link>
  <gazebo reference="left_middle_wheel_link">
    <!-- Turtlebot: -->
    <mu1 value="10"/>
    <mu2 value="10"/>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
    <material value="Gazebo/FlatBlack"/>
  </gazebo>
  <joint name="left_middle_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.205 -0.0275"/>
    <parent link="base_link"/>
    <child link="left_middle_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="left_rear_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
      <material name="blackish">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000681390352444" ixy="0.0" ixz="0.0" iyy="0.000681390352444" iyz="0.0" izz="0.00121278125"/>
    </inertial>
  </link>
  <gazebo reference="left_rear_wheel_link">
    <!-- Turtlebot: -->
    <mu1 value="10"/>
    <mu2 value="10"/>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
    <material value="Gazebo/FlatBlack"/>
  </gazebo>
  <joint name="left_rear_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.225 0.205 -0.0275"/>
    <parent link="base_link"/>
    <child link="left_rear_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_front_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0.0" xyz="0 0 0"/>
      <geometry>
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
      <material name="blackish">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000681390352444" ixy="0.0" ixz="0.0" iyy="0.000681390352444" iyz="0.0" izz="0.00121278125"/>
    </inertial>
  </link>
  <gazebo reference="right_front_wheel_link">
    <!-- Turtlebot: -->
    <mu1 value="10"/>
    <mu2 value="10"/>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
    <material value="Gazebo/FlatBlack"/>
  </gazebo>
  <joint name="right_front_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.225 -0.205 -0.0275"/>
    <parent link="base_link"/>
    <child link="right_front_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_middle_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0.0" xyz="0 0 0"/>
      <geometry>
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
      <material name="blackish">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000681390352444" ixy="0.0" ixz="0.0" iyy="0.000681390352444" iyz="0.0" izz="0.00121278125"/>
    </inertial>
  </link>
  <gazebo reference="right_middle_wheel_link">
    <!-- Turtlebot: -->
    <mu1 value="10"/>
    <mu2 value="10"/>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
    <material value="Gazebo/FlatBlack"/>
  </gazebo>
  <joint name="right_middle_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.205 -0.0275"/>
    <parent link="base_link"/>
    <child link="right_middle_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_rear_wheel_link">
    <visual>
      <origin rpy="1.57079632679 0 0.0" xyz="0 0 0"/>
      <geometry>
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
      <material name="blackish">
        <color rgba="0.2 0.2 0.2 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${wheel_width}" radius="${wheel_radius}"/>-->
        <mesh filename="package://volksbot_driver/meshes/wheel.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000681390352444" ixy="0.0" ixz="0.0" iyy="0.000681390352444" iyz="0.0" izz="0.00121278125"/>
    </inertial>
  </link>
  <gazebo reference="right_rear_wheel_link">
    <!-- Turtlebot: -->
    <mu1 value="10"/>
    <mu2 value="10"/>
    <kp value="100000000.0"/>
    <kd value="10000.0"/>
    <material value="Gazebo/FlatBlack"/>
  </gazebo>
  <joint name="right_rear_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.225 -0.205 -0.0275"/>
    <parent link="base_link"/>
    <child link="right_rear_wheel_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <!-- base link has 5cm clearence from ground and height of 15.5cm -->
    <origin rpy="0 0 0" xyz="0 0 0.1275"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_ros_diffdrive_uos.so" name="volksbot_diffdrive">
      <alwaysOn>true</alwaysOn>
      <cmd_vel_topic_name>cmd_vel</cmd_vel_topic_name>
      <odom_topic_name>odom</odom_topic_name>
      <joint_states_topic_name>joint_states</joint_states_topic_name>
      <left_front_wheel_joint>left_front_wheel_joint</left_front_wheel_joint>
      <left_middle_wheel_joint>left_middle_wheel_joint</left_middle_wheel_joint>
      <left_rear_wheel_joint>left_rear_wheel_joint</left_rear_wheel_joint>
      <right_front_wheel_joint>right_front_wheel_joint</right_front_wheel_joint>
      <right_middle_wheel_joint>right_middle_wheel_joint</right_middle_wheel_joint>
      <right_rear_wheel_joint>right_rear_wheel_joint</right_rear_wheel_joint>
      <wheel_separation>0.41</wheel_separation>
      <wheel_diameter>0.197</wheel_diameter>
      <turning_adaptation>0.95</turning_adaptation>
      <torque>4.0</torque>
      <max_velocity>0.9</max_velocity>
      <updateRate>40.0</updateRate>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="base_footprint_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>30.0</updateRate>
      <bodyName>base_footprint</bodyName>
      <topicName>base_footprint_pose_ground_truth</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>map</frameName>
      <interface:position name="base_footprint_p3d_position_iface"/>
    </plugin>
  </gazebo>
  <link name="structure">
    <visual>
      <geometry>
        <!--<box size="${structure_length} ${structure_width} ${structure_height}" />-->
        <mesh filename="package://calvin_description/meshes/item-structure.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<box size="${structure_length} ${structure_width} ${structure_height}" />-->
        <mesh filename="package://calvin_description/meshes/item-structure.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0604166425" ixy="0.0" ixz="0.0" iyy="0.06494997402" iyz="0.0" izz="0.0386666512"/>
    </inertial>
  </link>
  <joint name="top_to_structure" type="fixed">
    <parent link="base_link"/>
    <child link="structure"/>
    <origin rpy="0 0 0" xyz="0.075 0 0.3325"/>
  </joint>
  <link name="imu"/>
  <joint name="structure_to_imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu"/>
    <origin rpy="3.14159265359 0 3.14159265359" xyz="0 0 0"/>
  </joint>
  <link name="pole">
    <visual>
      <geometry>
        <!--<box size="${pole_length} ${pole_width} ${pole_height}" />-->
        <mesh filename="package://calvin_description/meshes/item-pole.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<box size="${pole_length} ${pole_width} ${pole_height}" />-->
        <mesh filename="package://calvin_description/meshes/item-pole.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.02084165833" ixy="0.0" ixz="0.0" iyy="0.02084165833" iyz="0.0" izz="1.666666e-05"/>
    </inertial>
  </link>
  <joint name="structure_to_pole_joint" type="fixed">
    <parent link="structure"/>
    <child link="pole"/>
    <origin rpy="0 0 0" xyz="-0.19 0 0.755"/>
  </joint>
  <link name="cup">
    <visual>
      <geometry>
        <!--<cylinder length="${cup_height}" radius="${cup_radius}" />-->
        <mesh filename="package://calvin_description/meshes/cup.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <!-- using STL for collision to fix http://answers.ros.org/question/2368/gazebo-model-wheels-slip-after-upgrade-to-electric -->
        <!--<cylinder length="${cup_height}" radius="${cup_radius}" />-->
        <mesh filename="package://calvin_description/meshes/cup.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="2.6979155875e-05" ixy="0.0" ixz="0.0" iyy="2.6979155875e-05" iyz="0.0" izz="5.0625e-05"/>
    </inertial>
  </link>
  <joint name="structure_to_cup_joint" type="fixed">
    <parent link="structure"/>
    <child link="cup"/>
    <origin rpy="0 0 0" xyz="0.135 0.115 0.265"/>
  </joint>
  <!-- ******************************** -->
  <!-- *** Sick_LMS200 Laser Scanner *** -->
  <!-- ******************************** -->
  <link name="sick_lms200">
    <visual>
      <geometry>
        <mesh filename="package://uos_common_urdf/meshes/sick_lms-200.stl"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://uos_common_urdf/meshes/sick_lms-200.stl"/>
        <!-- <box size=".156 .155 .185" />-->
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="-0.022849644 0.000005772 0.040232937"/>
      <inertia ixx="0.009318238" ixy="-0.000000024" ixz="-0.000148360" iyy="0.009251799" iyz="0.000000400" izz="0.007478235"/>
    </inertial>
  </link>
  <gazebo reference="sick_lms200">
    <material value="Gazebo/Blue"/>
    <sensor name="laser" type="ray">
      <always_on>true</always_on>
      <visualize>false</visualize>
      <topic>scan</topic>
      <update_rate>75.0</update_rate>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser_controller">
        <frameName>laser</frameName>
        <topicName>scan</topicName>
        <gaussianNoise>0.005</gaussianNoise>
        <updateRate>75.0</updateRate>
      </plugin>
      <ray>
        <scan>
          <horizontal>
            <samples>181</samples>
            <resolution>1</resolution>
            <min_angle>-1.571</min_angle>
            <max_angle>1.571</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.08</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
    </sensor>
  </gazebo>
  <joint name="structure_to_sick_lms200_joint" type="fixed">
    <parent link="structure"/>
    <child link="sick_lms200"/>
    <origin rpy="0 0 0" xyz="-0.075 0 -0.1525"/>
  </joint>
  <!-- ******************************** -->
  <!-- *** gazebo ros camera plugin *** -->
  <!-- ******************************** -->
  <gazebo reference="webcam_link">
    <sensor name="webcam_sensor" type="camera">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <!-- <topic>image_raw</topic> -->
      <camera>
        <horizontal_fov>1.57</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="webcam_plugin">
        <cameraName>webcam</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>webcam_optical_link</frameName>
      </plugin>
      <!-- This keeps segfaulting on hydro, use gazebo_ros_camera for now
        <plugin name="${frame_prefix}_plugin" filename="libgazebo_ros_prosilica.so">
          <cameraName>${camera_name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${frame_prefix}_optical_link</frameName>
          <CxPrime>1224.5</CxPrime>
          <Cx>1224.5</Cx>
          <Cy>1025.5</Cy>
          <focalLength>772.548512</focalLength> <!- image_width / (2*tan(hfov_radian /2)) ->
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
-->
    </sensor>
    <material value="Gazebo/Black"/>
  </gazebo>
  <joint name="webcam_pitch_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0.315"/>
    <parent link="pole"/>
    <child link="webcam_pitch_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" lower="-1.57079632679" upper="1.57079632679" velocity="2.0"/>
  </joint>
  <link name="webcam_pitch_link">
    <visual>
      <origin rpy="0 0 0" xyz="0.031 0 -0.02"/>
      <geometry>
        <box size="0.082 0.095 0.02"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.031 0 -0.02"/>
      <geometry>
        <box size="0.082 0.095 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0.031 0 -0.02"/>
      <inertia ixx="7.854163525e-06" ixy="0.0" ixz="0.0" iyy="5.936664292e-06" iyz="0.0" izz="1.3124161417e-05"/>
    </inertial>
  </link>
  <joint name="webcam_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.06 0.01 -0.04"/>
    <parent link="webcam_pitch_link"/>
    <child link="webcam_link"/>
  </joint>
  <link name="webcam_link">
    <visual>
      <geometry>
        <box size="0.02 0.085 0.02"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.085 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="6.354164125e-06" ixy="0.0" ixz="0.0" iyy="6.666664e-07" iyz="0.0" izz="6.354164125e-06"/>
    </inertial>
  </link>
  <joint name="webcam_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="webcam_link"/>
    <child link="webcam_optical_link"/>
  </joint>
  <link name="webcam_optical_link"/>
  <!-- **************************** -->
  <!-- *** Neuronics Katana Arm *** -->
  <!-- **************************** -->
  <link name="katana_internal_controlbox_link">
    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_internal_controlbox.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_internal_controlbox_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.47057045"/>
      <origin xyz="0.000024 -0.006508 0.030555"/>
      <inertia ixx="0.013760086" ixy="-0.000000539" ixz="-0.000000442" iyy="0.015251808" iyz="0.000361753" izz="0.023409309"/>
    </inertial>
  </link>
  <joint name="katana_base_joint" type="fixed">
    <parent link="katana_internal_controlbox_link"/>
    <child link="katana_base_link"/>
    <origin xyz="0 0 0.073"/>
  </joint>
  <gazebo reference="katana_internal_controlbox_link">
    <material value="Gazebo/Grey"/>
  </gazebo>
  <transmission name="katana_motor1_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_motor1_pan_joint"/>
    <actuator name="katana_motor1_pan_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="katana_motor2_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_motor2_lift_joint"/>
    <actuator name="katana_motor2_lift_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="katana_motor3_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_motor3_lift_joint"/>
    <actuator name="katana_motor3_lift_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="katana_motor4_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_motor4_lift_joint"/>
    <actuator name="katana_motor4_lift_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="katana_motor5_wrist_roll_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_motor5_wrist_roll_joint"/>
    <actuator name="katana_motor5_wrist_roll_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="katana_r_finger_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_r_finger_joint"/>
    <actuator name="katana_r_finger_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="katana_l_finger_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="katana_l_finger_joint"/>
    <actuator name="katana_l_finger_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
    <!-- gripper controller -->
    <plugin filename="libgazebo_ros_katana_gripper.so" name="katana_gripper_controller">
      <alwaysOn>true</alwaysOn>
      <node_namespace>katana</node_namespace>
      <r_finger_joint>katana_r_finger_joint</r_finger_joint>
      <l_finger_joint>katana_l_finger_joint</l_finger_joint>
      <updateRate>1000.0</updateRate>
      <max_torque>0.5</max_torque>
    </plugin>
    <!-- a formal implementation of grasp hack in gazebo with fixed joint -->
    <gripper name="katana_gripper_grasp_hack">
      <grasp_check>
        <attach_steps>20</attach_steps>
        <detach_steps>40</detach_steps>
        <min_contact_count>2</min_contact_count>
      </grasp_check>
      <gripper_link>katana_r_finger_link</gripper_link>
      <gripper_link>katana_l_finger_link</gripper_link>
      <palm_link>katana_gripper_link</palm_link>
    </gripper>
  </gazebo>
  <gazebo reference="katana_base_link">
    <material value="Gazebo/Grey"/>
  </gazebo>
  <gazebo reference="katana_motor1_pan_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_motor2_lift_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_motor3_lift_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_motor4_lift_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_motor5_wrist_roll_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_gripper_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_r_finger_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_l_finger_link">
    <material value="Gazebo/Grey"/>
    <turnGravityOff>true</turnGravityOff>
  </gazebo>
  <gazebo reference="katana_motor1_pan_joint">
    <initial_joint_position>-3.022</initial_joint_position>
  </gazebo>
  <gazebo reference="katana_motor2_lift_joint">
    <initial_joint_position>2.163</initial_joint_position>
  </gazebo>
  <gazebo reference="katana_motor3_lift_joint">
    <initial_joint_position>-2.207</initial_joint_position>
  </gazebo>
  <gazebo reference="katana_motor4_lift_joint">
    <initial_joint_position>-2.026</initial_joint_position>
  </gazebo>
  <gazebo reference="katana_motor5_wrist_roll_joint">
    <initial_joint_position>-2.990</initial_joint_position>
  </gazebo>
  <gazebo reference="katana_r_finger_joint">
    <initial_joint_position>0.3</initial_joint_position>
  </gazebo>
  <gazebo reference="katana_l_finger_joint">
    <initial_joint_position>0.3</initial_joint_position>
  </gazebo>
  <link name="katana_base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_base_link.stl"/>
      </geometry>
      <material name="grey">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_base_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.4047990875"/>
      <origin xyz="-0.000327 0.000908 0.058457"/>
      <inertia ixx="0.003000703" ixy="0.000000864" ixz="-0.000011312" iyy="0.002974822" iyz="0.000036294" izz="0.001434739"/>
    </inertial>
  </link>
  <joint name="katana_motor1_pan_joint" type="revolute">
    <!-- Joint 1 in Katana Manual -->
    <parent link="katana_base_link"/>
    <child link="katana_motor1_pan_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.2015"/>
    <axis xyz="0 0 1"/>
    <limit effort="1.5" lower="-3.025528" upper="2.891097" velocity="2.208932"/>
  </joint>
  <link name="katana_motor1_pan_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.2015"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_motor1_pan_link.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.2015"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_motor1_pan_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.74793301875"/>
      <origin xyz="-0.000410 -0.001285 -0.016774"/>
      <inertia ixx="0.001737241" ixy="0.000000421" ixz="0.000000650" iyy="0.000998782" iyz="0.000016114" izz="0.001349170"/>
    </inertial>
  </link>
  <joint name="katana_motor2_lift_joint" type="revolute">
    <!-- Joint 2 in Katana Manual -->
    <parent link="katana_motor1_pan_link"/>
    <child link="katana_motor2_lift_link"/>
    <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.6" lower="-0.135228" upper="2.168572" velocity="1.190799"/>
  </joint>
  <link name="katana_motor2_lift_link">
    <visual>
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_motor2_lift_link.stl"/>
      </geometry>
      <!-- <geometry>
          <cylinder length="${link2_length}" radius="0.02"/>
        </geometry>
        <origin rpy="0 ${-M_PI/2} 0" xyz="${link2_length/2} 0 0" /> -->
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_motor2_lift_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.80174941875"/>
      <origin xyz="0.092420 0.005283 0.000172"/>
      <inertia ixx="0.000478252" ixy="0.000081166" ixz="0.000003961" iyy="0.004314636" iyz="0.000000332" izz="0.004625444"/>
    </inertial>
  </link>
  <joint name="katana_motor3_lift_joint" type="revolute">
    <!-- Joint 3 in Katana Manual -->
    <parent link="katana_motor2_lift_link"/>
    <child link="katana_motor3_lift_link"/>
    <origin rpy="0 0 0" xyz="0.19 0 0"/>
    <axis xyz="0 0 1"/>
    <!-- unexplicably, the measured velocity limit of this motor is exactly half of what vel_enc2rad(180) says -->
    <limit effort="0.25" lower="-2.221804" upper="2.054223" velocity="1.190799"/>
  </joint>
  <link name="katana_motor3_lift_link">
    <visual>
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_motor3_lift_link.stl"/>
      </geometry>
      <!--<geometry>
          <cylinder length="${link3_length}" radius="0.02"/>
        </geometry>
        <origin rpy="0 ${-M_PI/2} 0" xyz="${link3_length/2} 0 0" />-->
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="-1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_motor3_lift_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.79241664375"/>
      <origin xyz="0.058036 0.008963 -0.000187"/>
      <inertia ixx="0.001156089" ixy="0.000112877" ixz="-0.000004398" iyy="0.002305646" iyz="-0.000000036" izz="0.003128648"/>
    </inertial>
  </link>
  <joint name="katana_motor4_lift_joint" type="revolute">
    <!-- Joint 4 in Katana Manual -->
    <parent link="katana_motor3_lift_link"/>
    <child link="katana_motor4_lift_link"/>
    <origin rpy="3.14159265359 0 0" xyz="0.139 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.1" lower="-2.033309" upper="1.876133" velocity="2.208932"/>
  </joint>
  <link name="katana_motor4_lift_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_motor4_lift_link.stl"/>
      </geometry>
      <!-- <geometry>
          <cylinder length="${link4_length}" radius="0.02"/>
        </geometry>
        <origin rpy="0 ${-M_PI/2} 0" xyz="${link4_length/2} 0 0" /> -->
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_motor4_lift_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.69149323125"/>
      <origin xyz="0.050401 0.005807 0.000000"/>
      <inertia ixx="0.000765999" ixy="0.000045260" ixz="-0.000001210" iyy="0.001504115" iyz="0.000000147" izz="0.001887277"/>
    </inertial>
  </link>
  <joint name="katana_motor5_wrist_roll_joint" type="revolute">
    <!-- Joint 5 in Katana Manual -->
    <parent link="katana_motor4_lift_link"/>
    <child link="katana_motor5_wrist_roll_link"/>
    <origin rpy="1.57079632679 0 -1.57079632679" xyz="0.1473 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.01" lower="-2.993240" upper="2.870985" velocity="2.208932"/>
  </joint>
  <link name="katana_motor5_wrist_roll_link">
    <visual>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_motor5_wrist_roll_link.stl"/>
      </geometry>
      <!--<geometry>
          <cylinder length="${link5_length}" radius="0.02"/>
        </geometry>
        <origin rpy="0 ${-M_PI/2} 0" xyz="${link5_length/2} 0 0" />-->
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 1.57079632679 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_motor5_wrist_roll_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.25622555625"/>
      <origin xyz="-0.003140899 0.000013920 0.001680144"/>
      <inertia ixx="0.000120481" ixy="0.000000015" ixz="-0.000001089" iyy="0.000132130" iyz="-0.000000124" izz="0.000093522"/>
    </inertial>
  </link>
  <joint name="katana_gripper_joint" type="fixed">
    <parent link="katana_motor5_wrist_roll_link"/>
    <child link="katana_gripper_link"/>
    <origin rpy="0 0 0" xyz="0.0323 0 0"/>
  </joint>
  <link name="katana_gripper_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_gripper_link.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_gripper_link_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.0552136183596"/>
      <origin xyz="-0.014379 -0.000000 0.000006"/>
      <inertia ixx="0.000011468" ixy="0.000000000" ixz="0.000000007" iyy="0.000013830" iyz="0.000000000" izz="0.000011290"/>
    </inertial>
  </link>
  <joint name="katana_r_finger_joint" type="revolute">
    <parent link="katana_gripper_link"/>
    <child link="katana_r_finger_link"/>
    <origin rpy="0 0 0" xyz="0.034 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.5" lower="-0.44" upper="0.30" velocity="0.718834"/>
  </joint>
  <link name="katana_r_finger_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_gripper_r_finger.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_gripper_r_finger_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.0251722230462"/>
      <origin xyz="0.001784 0.025167 -.001603"/>
      <inertia ixx="0.000005990" ixy="0.000008473" ixz="0.000001448" iyy="0.000019757" iyz="-0.000000996" izz="0.000023588"/>
    </inertial>
  </link>
  <joint name="katana_l_finger_joint" type="revolute">
    <parent link="katana_gripper_link"/>
    <child link="katana_l_finger_link"/>
    <origin rpy="3.14159265359 0 0" xyz="0.034 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.5" lower="-0.44" upper="0.30" velocity="0.718834"/>
  </joint>
  <link name="katana_l_finger_link">
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/katana_gripper_l_finger.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://katana_description/meshes/katana/convex/katana_gripper_l_finger_convex.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.0251722230462"/>
      <origin xyz="0.001784 0.025167 -.001603"/>
      <inertia ixx="0.000005990" ixy="0.000008473" ixz="0.000001448" iyy="0.000019757" iyz="-0.000000996" izz="0.000023588"/>
    </inertial>
  </link>
  <joint name="katana_gripper_tool_frame_joint" type="fixed">
    <parent link="katana_motor5_wrist_roll_link"/>
    <child link="katana_gripper_tool_frame"/>
    <origin rpy="0 1.57079632679 0" xyz="0.11 0 0"/>
  </joint>
  <link name="katana_gripper_tool_frame">
    <!-- This is the coordinate system of the end effector (this is the position
         used in IK); there is no actual arm part attached to this link -->
  </link>
  <link name="katana_pattern"/>
  <joint name="katana_pattern_joint" type="fixed">
    <parent link="katana_motor4_lift_link"/>
    <child link="katana_pattern"/>
    <origin rpy="1.571 -1.571 0.151" xyz=".075 -.035 0.00"/>
  </joint>
  <joint name="calvin_baseplate_controlbox_joint" type="fixed">
    <parent link="structure"/>
    <child link="katana_internal_controlbox_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.2615"/>
  </joint>
  <!-- ********************************** -->
  <!-- *** Kinect / Xtion RGBD Camera *** -->
  <!-- ********************************** -->
  <link name="kinect_pitch_link">
    <visual>
      <origin rpy="0 0 0" xyz="0.03 0 0"/>
      <geometry>
        <box size="0.08 0.17 0.02"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0.03 0 0"/>
      <geometry>
        <box size="0.08 0.17 0.02"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0.03 0 0"/>
      <inertia ixx="2.44166569e-05" ixy="0.0" ixz="0.0" iyy="5.6666644e-06" iyz="0.0" izz="2.94166549e-05"/>
    </inertial>
  </link>
  <joint name="kinect_pitch_joint" type="revolute">
    <parent link="pole"/>
    <child link="kinect_pitch_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.46"/>
    <axis xyz="0 1 0"/>
    <limit effort="1000.0" lower="-1.57079632679" upper="1.57079632679" velocity="2.0"/>
  </joint>
  <link name="kinect_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://pr2_description/meshes/sensors/kinect_v0/kinect.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.0315 0 -0.017"/>
      <geometry>
        <box size="0.0730 0.2760 0.0720"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.43"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00291539883384" ixy="0.0" ixz="0.0" iyy="0.000376715682647" iyz="0.0" izz="0.0029205946651"/>
    </inertial>
  </link>
  <joint name="kinect_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.018 0"/>
    <parent link="kinect_link"/>
    <child link="kinect_depth_frame"/>
  </joint>
  <link name="kinect_depth_frame">
    <inertial>
      <mass value="0.000001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="kinect_depth_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="kinect_depth_frame"/>
    <child link="kinect_depth_optical_frame"/>
  </joint>
  <link name="kinect_depth_optical_frame">
    <inertial>
      <mass value="0.000001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="kinect_depth_frame">
    <sensor name="kinect_depth_frame_ir_sensor" type="depth">
      <always_on>true</always_on>
      <update_rate>1.0</update_rate>
      <camera>
        <horizontal_fov>0.994837673637</horizontal_fov>
        <image>
          <format>L8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>5</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_depth_frame_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>kinect_ir</cameraName>
        <imageTopicName>/kinect/depth/image_raw</imageTopicName>
        <cameraInfoTopicName>/kinect/depth/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/kinect/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/kinect/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/kinect/depth/points</pointCloudTopicName>
        <frameName>kinect_depth_optical_frame</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
      </plugin>
    </sensor>
    <material value="Gazebo/Red"/>
  </gazebo>
  <joint name="kinect_rgb_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.005 0"/>
    <parent link="kinect_link"/>
    <child link="kinect_rgb_frame"/>
  </joint>
  <link name="kinect_rgb_frame">
    <inertial>
      <mass value="0.000001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <joint name="kinect_rgb_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="kinect_rgb_frame"/>
    <child link="kinect_rgb_optical_frame"/>
  </joint>
  <link name="kinect_rgb_optical_frame">
    <inertial>
      <mass value="0.000001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>
  <gazebo reference="kinect_rgb_frame">
    <sensor name="kinect_rgb_sensor" type="depth">
      <always_on>true</always_on>
      <update_rate>1.0</update_rate>
      <camera>
        <horizontal_fov>0.994837673637</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.01</near>
          <far>5</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect_rgb_frame_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>kinect_rgb</cameraName>
        <imageTopicName>/kinect/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>/kinect/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/kinect/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/kinect/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/kinect/depth_registered/points</pointCloudTopicName>
        <frameName>kinect_rgb_optical_frame</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
      </plugin>
    </sensor>
    <material value="Gazebo/Red"/>
  </gazebo>
  <joint name="calvin_kinect_joint" type="fixed">
    <parent link="kinect_pitch_link"/>
    <child link="kinect_link"/>
    <origin rpy="3.14159265359 0 0" xyz="0.07 -0.02 0.01"/>
  </joint>
  <transmission name="kinect_pitch_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="kinect_pitch_joint"/>
    <actuator name="kinect_pitch_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="webcam_pitch_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="webcam_pitch_joint"/>
    <actuator name="webcam_pitch_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- inertial measurement unit for gazebo -->
  <gazebo>
    <plugin filename="libgazebo_ros_imu.so" name="imu_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <bodyName>imu</bodyName>
      <topicName>imu</topicName>
      <serviceName>/default_imu</serviceName>
      <gaussianNoise>2.89e-08</gaussianNoise>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      <interface:position name="imu_position"/>
    </plugin>
  </gazebo>
  <link name="laser_mount_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001"/>
    </inertial>
  </link>
  <joint name="laser_joint" type="fixed">
    <parent link="laser_mount_link"/>
    <child link="laser"/>
    <origin rpy="0 0 0" xyz="0 0 0.05609"/>
  </joint>
  <link name="laser">
    <visual>
      <geometry>
        <mesh filename="package://sick_tim3xx/meshes/sick_tim3xx.stl"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 1 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://sick_tim3xx/meshes/sick_tim3xx.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.15"/>
      <origin xyz="0 0 -0.026"/>
      <inertia ixx="0.00012499995" ixy="0.0" ixz="0.0" iyy="0.00012499995" iyz="0.0" izz="8.9999964e-05"/>
    </inertial>
  </link>
  <gazebo reference="laser">
    <material value="Gazebo/Blue"/>
    <sensor name="laser" type="ray">
      <always_on>true</always_on>
      <update_rate>15.0</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>271</samples>
            <resolution>1</resolution>
            <min_angle>-2.357</min_angle>
            <max_angle>2.357</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>4.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_laser_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <alwaysOn>true</alwaysOn>
        <updateRate>15.0</updateRate>
        <topicName>scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="laser_mount_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.25 0 0.08"/>
    <parent link="base_link"/>
    <child link="laser_mount_link"/>
  </joint>
</robot>
